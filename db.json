{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hxeo.md","hash":"62faf8a1a09687e5628c9586f2e130972aac6c20","modified":1740131287000},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"6497b70356271fd6f9f1dc862353be844c457a53","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"a93d7b3990e45bc7247eecf01888f71674887a63","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"06889bee30e4c39479467021da434d3a6a0990fc","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1740120193014},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1740120193018},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1740120193018},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1740120193018},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"57281fc3812c877ec2d8e89ec87ede57b9789d4c","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1740120188342},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"1b89d0caba03a66a43d9c290a5e94fa438a89210","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"0039146b8ccbdf9b9f8bee58fc6c238f0e9921fc","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"e9d4678e14be5e3cd5e34d783e5af6d6626092f5","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"0e94f5722d4c44d3cc91be2f4fd30b9ab503b868","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1740120175206},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1740120175210},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"f608400a08cf137ab15ec1f44bac551950afe879","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1740120193010},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1740120189746},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1740120187306},{"_id":"public/archives/index.html","hash":"8137aa05cb6a3bcf510d71c725b095dd405e2eab","modified":1740132043925},{"_id":"public/archives/2025/index.html","hash":"324d647fca2dec85c16e6a4534c3c77332956243","modified":1740132043925},{"_id":"public/archives/2025/02/index.html","hash":"48155f06b8f77e6803d6bf9d62576b258f0fa7eb","modified":1740132043925},{"_id":"public/categories/杂项/index.html","hash":"c8ef6bbd18005f443cfffca0e30617030af54fa1","modified":1740132043925},{"_id":"public/tags/杂项/index.html","hash":"4376306cdc394b092616d0129b9a330961f235b1","modified":1740132043925},{"_id":"public/2025/02/21/hxeo/index.html","hash":"05585c71d6f24571137d9f16abf7e5fd49749d74","modified":1740132043925},{"_id":"public/index.html","hash":"55f37ee520a60a2ccb2a5d846dad104528b9b4a6","modified":1740132043925},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1740132043925},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1740132043925},{"_id":"public/css/style.css","hash":"ecc329be740a220cc188ff49b02da4847cb7ee5e","modified":1740132043925},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1740132043925},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1740132043925},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1740132043925}],"Category":[{"name":"杂项","_id":"cm7eloulo0001ih52924dbj26"}],"Data":[],"Page":[],"Post":[{"title":"hexo 部署","_content":"\n\n\n## 介绍\n\nHexo 是一个快速、简单且功能强大的静态博客框架。它基于 Node.js 构建，使用 Markdown 文件生成静态网页，非常适合开发者和技术爱好者用来搭建博客和网站。Hexo 的设计目标是易于使用、快速生成，并且具有高度的可定制性\n\n## 特点\n\n- 速度： Hexo 是一个静态网站生成器，意味着所有的网页都会在生成时预先构建好，加载速度非常快。通过并行处理，Hexo 可以迅速生成数百个页面。\n- 简单的配置和使用： Hexo 提供简洁的命令行接口，用户可以通过简单的命令来生成、部署和管理博客。\n- Markdown 支持： 你可以使用 Markdown 编写文章，Hexo 会将它们转换为静态 HTML 文件。\n- 多种主题和插件支持： Hexo 有丰富的社区支持，你可以选择大量的主题和插件来定制你的博客。主题控制着博客的外观，插件为博客添加额外功能（如评论、统计、SEO 优化等）。\n- 跨平台支持： 由于 Hexo 是基于 Node.js 构建的，所以它支持跨平台（Windows、Linux、macOS），可以在各种操作系统上运行。\n- 部署支持： Hexo 支持多种部署方式，包括 GitHub Pages、GitLab Pages、私有服务器、FTP 等。你可以通过配置文件来选择部署方式。\n\n## hexo 配置\n\nHexo 的配置文件通常是 /_config.yml，用于设置网站的基本信息和行为。常见的配置项包括：\n\n- 网站名称：设置博客的名称。\n- 语言和时区：可以选择博客的语言和时区。\n- 主题设置：设置主题以及主题相关的配置文件。\n- 部署设置：设置如何将生成的静态文件上传到远程服务器\n\n```\ntitle: My Blog\nsubtitle: A personal blog\ndescription: This is my blog where I share my thoughts.\nauthor: Your Name\nlanguage: en\ntimezone: Asia/Shanghai\n```\n\n## hexo 常用命令\n\n| 命令                  | 说明                             |\n| --------------------- | -------------------------------- |\n| hexo new post \"Title\" | 创建新文章，保存在source/_posts/ |\n| hexo generate         | 生成静态文件，输出到 public/     |\n| hexo server           | 启动本地服务器，预览博客         |\n| hexo deploy           | 部署生成的博客到远程服务器       |\n| hexo clean            | 清除缓存和生成的文件             |\n| hexo list             | 查看所有文章和页面               |\n\n## 部署\n\n### 本地部署\n\n#### 1.安装 Node.js和 git\n\n访问 node官网，选择合适版本进行安装（推荐18版本的）\nhttps://nodejs.org/en/download\n\n2.安装完成后，可通过命令检查是否安装成功\n\n```\nnode -v\nnpm -v\n```\n\n访问Git官网，根据官网提示安装\n\n#### 2.安装Hexo\n\n通过终端或命令行工具进行安装\n\n```\nnpm install hexo-cli -g\n```\n\n#### 3.创建一个新的 Hexo 项目\n\n在存放 Hexo博客的目录下，执行以下命令创建新的Hexo 项目\n\n```\nhexo init my-blog\n```\n\nmy-blog 是项目目录名称\n\n#### 4.安装依赖\n\n项目创建完成后，进入项目目录并安装 Hexo所需的依赖：\n\n```\ncd my-blog\nnpm install\n```\n\n#### 5.生成静态文件\n\n每次修改完内容后，可使用下列内容生成静态页面\n\n```\nhexo generate \n```\n\n这会在项目目录下的 public/ 文件夹中生成静态文件\n\n6.启动本地开发服务器\n\n在Hexo 项目目录下，运行以下命令来启动本地开发服务器\n\n```\nhexo server\n```\n\n可通过 http://localhost:4000 上访问hexo博客内容\n\n### 服务器部署（ubuntu）\n\n#### 安装依赖\n\n```\napt update\napt install nodejs npm \nnode -v \nnpm -v\n```\n\n#### 安装 Hexo\n\n```\nnpm install -g hexo-cli\n```\n\n#### 初始化 Hexo 项目\n\n```\nmkdir hexo-blog\ncd hexo-blog\nhexo init\nnpm install\n```\n\n#### 安装并配置nginx反向代理\n\n**安装nginx**\n\n```\napt update\napt install nginx \n```\n\n**配置nginx**\n添加如下配置\n\n```\nserver {\n    listen 80;\n    server_name yourdomain.com;\n    \n    root /var/www/my-blog/public;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n```\n\n**重启nginx**\n\n```\nnginx -t\nnginx -s reload\n```\n\n可通过 http://yourdomain.com 上访问hexo博客内容\n\n### 部署到 GitHub Pages\n\nGitHub Pages 是一个非常适合托管静态博客的免费服务。\n\n#### 创建 GitHub 仓库\n\n登录（GitHub），创建一个新的仓库，命名为 your-username.github.io（your-username 是Github 用户名）\n\n#### 安装 Hexo 部署插件\n\nHexo 提供了一个部署插件，可将博客文件部署到 GitHub Pages 上\n\n```\nnpm install hexo-deployer-git --save\n```\n\n#### 配置 _config.yml 文件\n\n在 Hexo 项目的根目录下，找到 _config.yml 配置文件，配置 deploy 部分：\n\n```\nurl: https://anthonywangjing.github.io   \nroot: /My-Blog/\n\ndeploy:\n  type: 'git'\n  repo: git@github.com:anthonywangjing/my-blog.git  //ssh连接\n  branch: master      //部署的分支 \n```\n\n#### 部署 Hexo 博客\n\n```\nhexo clean    //清理缓存\nhexo generate  //生成静态文件\nhexo deploy    //远端部署\n```\n\n#### 验证部署\n\n访问 https://your-username.github.io/{项目名}，便可访问 Hexo博客，如 https://anthonywangjing.github.io/My-Blog\n","source":"_posts/hxeo.md","raw":"---\ntitle: hexo 部署\ntags:\n  - 杂项\ncategory: 杂项\n---\n\n\n\n## 介绍\n\nHexo 是一个快速、简单且功能强大的静态博客框架。它基于 Node.js 构建，使用 Markdown 文件生成静态网页，非常适合开发者和技术爱好者用来搭建博客和网站。Hexo 的设计目标是易于使用、快速生成，并且具有高度的可定制性\n\n## 特点\n\n- 速度： Hexo 是一个静态网站生成器，意味着所有的网页都会在生成时预先构建好，加载速度非常快。通过并行处理，Hexo 可以迅速生成数百个页面。\n- 简单的配置和使用： Hexo 提供简洁的命令行接口，用户可以通过简单的命令来生成、部署和管理博客。\n- Markdown 支持： 你可以使用 Markdown 编写文章，Hexo 会将它们转换为静态 HTML 文件。\n- 多种主题和插件支持： Hexo 有丰富的社区支持，你可以选择大量的主题和插件来定制你的博客。主题控制着博客的外观，插件为博客添加额外功能（如评论、统计、SEO 优化等）。\n- 跨平台支持： 由于 Hexo 是基于 Node.js 构建的，所以它支持跨平台（Windows、Linux、macOS），可以在各种操作系统上运行。\n- 部署支持： Hexo 支持多种部署方式，包括 GitHub Pages、GitLab Pages、私有服务器、FTP 等。你可以通过配置文件来选择部署方式。\n\n## hexo 配置\n\nHexo 的配置文件通常是 /_config.yml，用于设置网站的基本信息和行为。常见的配置项包括：\n\n- 网站名称：设置博客的名称。\n- 语言和时区：可以选择博客的语言和时区。\n- 主题设置：设置主题以及主题相关的配置文件。\n- 部署设置：设置如何将生成的静态文件上传到远程服务器\n\n```\ntitle: My Blog\nsubtitle: A personal blog\ndescription: This is my blog where I share my thoughts.\nauthor: Your Name\nlanguage: en\ntimezone: Asia/Shanghai\n```\n\n## hexo 常用命令\n\n| 命令                  | 说明                             |\n| --------------------- | -------------------------------- |\n| hexo new post \"Title\" | 创建新文章，保存在source/_posts/ |\n| hexo generate         | 生成静态文件，输出到 public/     |\n| hexo server           | 启动本地服务器，预览博客         |\n| hexo deploy           | 部署生成的博客到远程服务器       |\n| hexo clean            | 清除缓存和生成的文件             |\n| hexo list             | 查看所有文章和页面               |\n\n## 部署\n\n### 本地部署\n\n#### 1.安装 Node.js和 git\n\n访问 node官网，选择合适版本进行安装（推荐18版本的）\nhttps://nodejs.org/en/download\n\n2.安装完成后，可通过命令检查是否安装成功\n\n```\nnode -v\nnpm -v\n```\n\n访问Git官网，根据官网提示安装\n\n#### 2.安装Hexo\n\n通过终端或命令行工具进行安装\n\n```\nnpm install hexo-cli -g\n```\n\n#### 3.创建一个新的 Hexo 项目\n\n在存放 Hexo博客的目录下，执行以下命令创建新的Hexo 项目\n\n```\nhexo init my-blog\n```\n\nmy-blog 是项目目录名称\n\n#### 4.安装依赖\n\n项目创建完成后，进入项目目录并安装 Hexo所需的依赖：\n\n```\ncd my-blog\nnpm install\n```\n\n#### 5.生成静态文件\n\n每次修改完内容后，可使用下列内容生成静态页面\n\n```\nhexo generate \n```\n\n这会在项目目录下的 public/ 文件夹中生成静态文件\n\n6.启动本地开发服务器\n\n在Hexo 项目目录下，运行以下命令来启动本地开发服务器\n\n```\nhexo server\n```\n\n可通过 http://localhost:4000 上访问hexo博客内容\n\n### 服务器部署（ubuntu）\n\n#### 安装依赖\n\n```\napt update\napt install nodejs npm \nnode -v \nnpm -v\n```\n\n#### 安装 Hexo\n\n```\nnpm install -g hexo-cli\n```\n\n#### 初始化 Hexo 项目\n\n```\nmkdir hexo-blog\ncd hexo-blog\nhexo init\nnpm install\n```\n\n#### 安装并配置nginx反向代理\n\n**安装nginx**\n\n```\napt update\napt install nginx \n```\n\n**配置nginx**\n添加如下配置\n\n```\nserver {\n    listen 80;\n    server_name yourdomain.com;\n    \n    root /var/www/my-blog/public;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n```\n\n**重启nginx**\n\n```\nnginx -t\nnginx -s reload\n```\n\n可通过 http://yourdomain.com 上访问hexo博客内容\n\n### 部署到 GitHub Pages\n\nGitHub Pages 是一个非常适合托管静态博客的免费服务。\n\n#### 创建 GitHub 仓库\n\n登录（GitHub），创建一个新的仓库，命名为 your-username.github.io（your-username 是Github 用户名）\n\n#### 安装 Hexo 部署插件\n\nHexo 提供了一个部署插件，可将博客文件部署到 GitHub Pages 上\n\n```\nnpm install hexo-deployer-git --save\n```\n\n#### 配置 _config.yml 文件\n\n在 Hexo 项目的根目录下，找到 _config.yml 配置文件，配置 deploy 部分：\n\n```\nurl: https://anthonywangjing.github.io   \nroot: /My-Blog/\n\ndeploy:\n  type: 'git'\n  repo: git@github.com:anthonywangjing/my-blog.git  //ssh连接\n  branch: master      //部署的分支 \n```\n\n#### 部署 Hexo 博客\n\n```\nhexo clean    //清理缓存\nhexo generate  //生成静态文件\nhexo deploy    //远端部署\n```\n\n#### 验证部署\n\n访问 https://your-username.github.io/{项目名}，便可访问 Hexo博客，如 https://anthonywangjing.github.io/My-Blog\n","slug":"hxeo","published":1,"date":"2025-02-21T09:48:16.467Z","updated":"2025-02-21T09:48:07.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7elouli0000ih528iv96mni","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Hexo 是一个快速、简单且功能强大的静态博客框架。它基于 Node.js 构建，使用 Markdown 文件生成静态网页，非常适合开发者和技术爱好者用来搭建博客和网站。Hexo 的设计目标是易于使用、快速生成，并且具有高度的可定制性</p>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><ul>\n<li>速度： Hexo 是一个静态网站生成器，意味着所有的网页都会在生成时预先构建好，加载速度非常快。通过并行处理，Hexo 可以迅速生成数百个页面。</li>\n<li>简单的配置和使用： Hexo 提供简洁的命令行接口，用户可以通过简单的命令来生成、部署和管理博客。</li>\n<li>Markdown 支持： 你可以使用 Markdown 编写文章，Hexo 会将它们转换为静态 HTML 文件。</li>\n<li>多种主题和插件支持： Hexo 有丰富的社区支持，你可以选择大量的主题和插件来定制你的博客。主题控制着博客的外观，插件为博客添加额外功能（如评论、统计、SEO 优化等）。</li>\n<li>跨平台支持： 由于 Hexo 是基于 Node.js 构建的，所以它支持跨平台（Windows、Linux、macOS），可以在各种操作系统上运行。</li>\n<li>部署支持： Hexo 支持多种部署方式，包括 GitHub Pages、GitLab Pages、私有服务器、FTP 等。你可以通过配置文件来选择部署方式。</li>\n</ul>\n<h2 id=\"hexo-配置\"><a href=\"#hexo-配置\" class=\"headerlink\" title=\"hexo 配置\"></a>hexo 配置</h2><p>Hexo 的配置文件通常是 &#x2F;_config.yml，用于设置网站的基本信息和行为。常见的配置项包括：</p>\n<ul>\n<li>网站名称：设置博客的名称。</li>\n<li>语言和时区：可以选择博客的语言和时区。</li>\n<li>主题设置：设置主题以及主题相关的配置文件。</li>\n<li>部署设置：设置如何将生成的静态文件上传到远程服务器</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: My Blog</span><br><span class=\"line\">subtitle: A personal blog</span><br><span class=\"line\">description: This is my blog where I share my thoughts.</span><br><span class=\"line\">author: Your Name</span><br><span class=\"line\">language: en</span><br><span class=\"line\">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-常用命令\"><a href=\"#hexo-常用命令\" class=\"headerlink\" title=\"hexo 常用命令\"></a>hexo 常用命令</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hexo new post “Title”</td>\n<td>创建新文章，保存在source&#x2F;_posts&#x2F;</td>\n</tr>\n<tr>\n<td>hexo generate</td>\n<td>生成静态文件，输出到 public&#x2F;</td>\n</tr>\n<tr>\n<td>hexo server</td>\n<td>启动本地服务器，预览博客</td>\n</tr>\n<tr>\n<td>hexo deploy</td>\n<td>部署生成的博客到远程服务器</td>\n</tr>\n<tr>\n<td>hexo clean</td>\n<td>清除缓存和生成的文件</td>\n</tr>\n<tr>\n<td>hexo list</td>\n<td>查看所有文章和页面</td>\n</tr>\n</tbody></table>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><h3 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h3><h4 id=\"1-安装-Node-js和-git\"><a href=\"#1-安装-Node-js和-git\" class=\"headerlink\" title=\"1.安装 Node.js和 git\"></a>1.安装 Node.js和 git</h4><p>访问 node官网，选择合适版本进行安装（推荐18版本的）<br><a href=\"https://nodejs.org/en/download\">https://nodejs.org/en/download</a></p>\n<p>2.安装完成后，可通过命令检查是否安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<p>访问Git官网，根据官网提示安装</p>\n<h4 id=\"2-安装Hexo\"><a href=\"#2-安装Hexo\" class=\"headerlink\" title=\"2.安装Hexo\"></a>2.安装Hexo</h4><p>通过终端或命令行工具进行安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-创建一个新的-Hexo-项目\"><a href=\"#3-创建一个新的-Hexo-项目\" class=\"headerlink\" title=\"3.创建一个新的 Hexo 项目\"></a>3.创建一个新的 Hexo 项目</h4><p>在存放 Hexo博客的目录下，执行以下命令创建新的Hexo 项目</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my-blog</span><br></pre></td></tr></table></figure>\n\n<p>my-blog 是项目目录名称</p>\n<h4 id=\"4-安装依赖\"><a href=\"#4-安装依赖\" class=\"headerlink\" title=\"4.安装依赖\"></a>4.安装依赖</h4><p>项目创建完成后，进入项目目录并安装 Hexo所需的依赖：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd my-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-生成静态文件\"><a href=\"#5-生成静态文件\" class=\"headerlink\" title=\"5.生成静态文件\"></a>5.生成静态文件</h4><p>每次修改完内容后，可使用下列内容生成静态页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate </span><br></pre></td></tr></table></figure>\n\n<p>这会在项目目录下的 public&#x2F; 文件夹中生成静态文件</p>\n<p>6.启动本地开发服务器</p>\n<p>在Hexo 项目目录下，运行以下命令来启动本地开发服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>可通过 <a href=\"http://localhost:4000/\">http://localhost:4000</a> 上访问hexo博客内容</p>\n<h3 id=\"服务器部署（ubuntu）\"><a href=\"#服务器部署（ubuntu）\" class=\"headerlink\" title=\"服务器部署（ubuntu）\"></a>服务器部署（ubuntu）</h3><h4 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt install nodejs npm </span><br><span class=\"line\">node -v </span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"初始化-Hexo-项目\"><a href=\"#初始化-Hexo-项目\" class=\"headerlink\" title=\"初始化 Hexo 项目\"></a>初始化 Hexo 项目</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo-blog</span><br><span class=\"line\">cd hexo-blog</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装并配置nginx反向代理\"><a href=\"#安装并配置nginx反向代理\" class=\"headerlink\" title=\"安装并配置nginx反向代理\"></a>安装并配置nginx反向代理</h4><p><strong>安装nginx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt install nginx </span><br></pre></td></tr></table></figure>\n\n<p><strong>配置nginx</strong><br>添加如下配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name yourdomain.com;</span><br><span class=\"line\">    </span><br><span class=\"line\">    root /var/www/my-blog/public;</span><br><span class=\"line\">    index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        try_files $uri $uri/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>重启nginx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<p>可通过 <a href=\"http://yourdomain.com/\">http://yourdomain.com</a> 上访问hexo博客内容</p>\n<h3 id=\"部署到-GitHub-Pages\"><a href=\"#部署到-GitHub-Pages\" class=\"headerlink\" title=\"部署到 GitHub Pages\"></a>部署到 GitHub Pages</h3><p>GitHub Pages 是一个非常适合托管静态博客的免费服务。</p>\n<h4 id=\"创建-GitHub-仓库\"><a href=\"#创建-GitHub-仓库\" class=\"headerlink\" title=\"创建 GitHub 仓库\"></a>创建 GitHub 仓库</h4><p>登录（GitHub），创建一个新的仓库，命名为 your-username.github.io（your-username 是Github 用户名）</p>\n<h4 id=\"安装-Hexo-部署插件\"><a href=\"#安装-Hexo-部署插件\" class=\"headerlink\" title=\"安装 Hexo 部署插件\"></a>安装 Hexo 部署插件</h4><p>Hexo 提供了一个部署插件，可将博客文件部署到 GitHub Pages 上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置-config-yml-文件\"><a href=\"#配置-config-yml-文件\" class=\"headerlink\" title=\"配置 _config.yml 文件\"></a>配置 _config.yml 文件</h4><p>在 Hexo 项目的根目录下，找到 _config.yml 配置文件，配置 deploy 部分：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https://anthonywangjing.github.io   </span><br><span class=\"line\">root: /My-Blog/</span><br><span class=\"line\"></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &#x27;git&#x27;</span><br><span class=\"line\">  repo: git@github.com:anthonywangjing/my-blog.git  //ssh连接</span><br><span class=\"line\">  branch: master      //部署的分支 </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"部署-Hexo-博客\"><a href=\"#部署-Hexo-博客\" class=\"headerlink\" title=\"部署 Hexo 博客\"></a>部署 Hexo 博客</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean    //清理缓存</span><br><span class=\"line\">hexo generate  //生成静态文件</span><br><span class=\"line\">hexo deploy    //远端部署</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"验证部署\"><a href=\"#验证部署\" class=\"headerlink\" title=\"验证部署\"></a>验证部署</h4><p>访问 <a href=\"https://your-username.github.io/%7B%E9%A1%B9%E7%9B%AE%E5%90%8D%7D%EF%BC%8C%E4%BE%BF%E5%8F%AF%E8%AE%BF%E9%97%AE\">https://your-username.github.io/{项目名}，便可访问</a> Hexo博客，如 <a href=\"https://anthonywangjing.github.io/My-Blog\">https://anthonywangjing.github.io/My-Blog</a></p>\n","excerpt":"","more":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Hexo 是一个快速、简单且功能强大的静态博客框架。它基于 Node.js 构建，使用 Markdown 文件生成静态网页，非常适合开发者和技术爱好者用来搭建博客和网站。Hexo 的设计目标是易于使用、快速生成，并且具有高度的可定制性</p>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><ul>\n<li>速度： Hexo 是一个静态网站生成器，意味着所有的网页都会在生成时预先构建好，加载速度非常快。通过并行处理，Hexo 可以迅速生成数百个页面。</li>\n<li>简单的配置和使用： Hexo 提供简洁的命令行接口，用户可以通过简单的命令来生成、部署和管理博客。</li>\n<li>Markdown 支持： 你可以使用 Markdown 编写文章，Hexo 会将它们转换为静态 HTML 文件。</li>\n<li>多种主题和插件支持： Hexo 有丰富的社区支持，你可以选择大量的主题和插件来定制你的博客。主题控制着博客的外观，插件为博客添加额外功能（如评论、统计、SEO 优化等）。</li>\n<li>跨平台支持： 由于 Hexo 是基于 Node.js 构建的，所以它支持跨平台（Windows、Linux、macOS），可以在各种操作系统上运行。</li>\n<li>部署支持： Hexo 支持多种部署方式，包括 GitHub Pages、GitLab Pages、私有服务器、FTP 等。你可以通过配置文件来选择部署方式。</li>\n</ul>\n<h2 id=\"hexo-配置\"><a href=\"#hexo-配置\" class=\"headerlink\" title=\"hexo 配置\"></a>hexo 配置</h2><p>Hexo 的配置文件通常是 &#x2F;_config.yml，用于设置网站的基本信息和行为。常见的配置项包括：</p>\n<ul>\n<li>网站名称：设置博客的名称。</li>\n<li>语言和时区：可以选择博客的语言和时区。</li>\n<li>主题设置：设置主题以及主题相关的配置文件。</li>\n<li>部署设置：设置如何将生成的静态文件上传到远程服务器</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: My Blog</span><br><span class=\"line\">subtitle: A personal blog</span><br><span class=\"line\">description: This is my blog where I share my thoughts.</span><br><span class=\"line\">author: Your Name</span><br><span class=\"line\">language: en</span><br><span class=\"line\">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-常用命令\"><a href=\"#hexo-常用命令\" class=\"headerlink\" title=\"hexo 常用命令\"></a>hexo 常用命令</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hexo new post “Title”</td>\n<td>创建新文章，保存在source&#x2F;_posts&#x2F;</td>\n</tr>\n<tr>\n<td>hexo generate</td>\n<td>生成静态文件，输出到 public&#x2F;</td>\n</tr>\n<tr>\n<td>hexo server</td>\n<td>启动本地服务器，预览博客</td>\n</tr>\n<tr>\n<td>hexo deploy</td>\n<td>部署生成的博客到远程服务器</td>\n</tr>\n<tr>\n<td>hexo clean</td>\n<td>清除缓存和生成的文件</td>\n</tr>\n<tr>\n<td>hexo list</td>\n<td>查看所有文章和页面</td>\n</tr>\n</tbody></table>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><h3 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h3><h4 id=\"1-安装-Node-js和-git\"><a href=\"#1-安装-Node-js和-git\" class=\"headerlink\" title=\"1.安装 Node.js和 git\"></a>1.安装 Node.js和 git</h4><p>访问 node官网，选择合适版本进行安装（推荐18版本的）<br><a href=\"https://nodejs.org/en/download\">https://nodejs.org/en/download</a></p>\n<p>2.安装完成后，可通过命令检查是否安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<p>访问Git官网，根据官网提示安装</p>\n<h4 id=\"2-安装Hexo\"><a href=\"#2-安装Hexo\" class=\"headerlink\" title=\"2.安装Hexo\"></a>2.安装Hexo</h4><p>通过终端或命令行工具进行安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-创建一个新的-Hexo-项目\"><a href=\"#3-创建一个新的-Hexo-项目\" class=\"headerlink\" title=\"3.创建一个新的 Hexo 项目\"></a>3.创建一个新的 Hexo 项目</h4><p>在存放 Hexo博客的目录下，执行以下命令创建新的Hexo 项目</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my-blog</span><br></pre></td></tr></table></figure>\n\n<p>my-blog 是项目目录名称</p>\n<h4 id=\"4-安装依赖\"><a href=\"#4-安装依赖\" class=\"headerlink\" title=\"4.安装依赖\"></a>4.安装依赖</h4><p>项目创建完成后，进入项目目录并安装 Hexo所需的依赖：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd my-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-生成静态文件\"><a href=\"#5-生成静态文件\" class=\"headerlink\" title=\"5.生成静态文件\"></a>5.生成静态文件</h4><p>每次修改完内容后，可使用下列内容生成静态页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate </span><br></pre></td></tr></table></figure>\n\n<p>这会在项目目录下的 public&#x2F; 文件夹中生成静态文件</p>\n<p>6.启动本地开发服务器</p>\n<p>在Hexo 项目目录下，运行以下命令来启动本地开发服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>可通过 <a href=\"http://localhost:4000/\">http://localhost:4000</a> 上访问hexo博客内容</p>\n<h3 id=\"服务器部署（ubuntu）\"><a href=\"#服务器部署（ubuntu）\" class=\"headerlink\" title=\"服务器部署（ubuntu）\"></a>服务器部署（ubuntu）</h3><h4 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt install nodejs npm </span><br><span class=\"line\">node -v </span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"初始化-Hexo-项目\"><a href=\"#初始化-Hexo-项目\" class=\"headerlink\" title=\"初始化 Hexo 项目\"></a>初始化 Hexo 项目</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo-blog</span><br><span class=\"line\">cd hexo-blog</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装并配置nginx反向代理\"><a href=\"#安装并配置nginx反向代理\" class=\"headerlink\" title=\"安装并配置nginx反向代理\"></a>安装并配置nginx反向代理</h4><p><strong>安装nginx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt install nginx </span><br></pre></td></tr></table></figure>\n\n<p><strong>配置nginx</strong><br>添加如下配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name yourdomain.com;</span><br><span class=\"line\">    </span><br><span class=\"line\">    root /var/www/my-blog/public;</span><br><span class=\"line\">    index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        try_files $uri $uri/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>重启nginx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<p>可通过 <a href=\"http://yourdomain.com/\">http://yourdomain.com</a> 上访问hexo博客内容</p>\n<h3 id=\"部署到-GitHub-Pages\"><a href=\"#部署到-GitHub-Pages\" class=\"headerlink\" title=\"部署到 GitHub Pages\"></a>部署到 GitHub Pages</h3><p>GitHub Pages 是一个非常适合托管静态博客的免费服务。</p>\n<h4 id=\"创建-GitHub-仓库\"><a href=\"#创建-GitHub-仓库\" class=\"headerlink\" title=\"创建 GitHub 仓库\"></a>创建 GitHub 仓库</h4><p>登录（GitHub），创建一个新的仓库，命名为 your-username.github.io（your-username 是Github 用户名）</p>\n<h4 id=\"安装-Hexo-部署插件\"><a href=\"#安装-Hexo-部署插件\" class=\"headerlink\" title=\"安装 Hexo 部署插件\"></a>安装 Hexo 部署插件</h4><p>Hexo 提供了一个部署插件，可将博客文件部署到 GitHub Pages 上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置-config-yml-文件\"><a href=\"#配置-config-yml-文件\" class=\"headerlink\" title=\"配置 _config.yml 文件\"></a>配置 _config.yml 文件</h4><p>在 Hexo 项目的根目录下，找到 _config.yml 配置文件，配置 deploy 部分：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https://anthonywangjing.github.io   </span><br><span class=\"line\">root: /My-Blog/</span><br><span class=\"line\"></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &#x27;git&#x27;</span><br><span class=\"line\">  repo: git@github.com:anthonywangjing/my-blog.git  //ssh连接</span><br><span class=\"line\">  branch: master      //部署的分支 </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"部署-Hexo-博客\"><a href=\"#部署-Hexo-博客\" class=\"headerlink\" title=\"部署 Hexo 博客\"></a>部署 Hexo 博客</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean    //清理缓存</span><br><span class=\"line\">hexo generate  //生成静态文件</span><br><span class=\"line\">hexo deploy    //远端部署</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"验证部署\"><a href=\"#验证部署\" class=\"headerlink\" title=\"验证部署\"></a>验证部署</h4><p>访问 <a href=\"https://your-username.github.io/%7B%E9%A1%B9%E7%9B%AE%E5%90%8D%7D%EF%BC%8C%E4%BE%BF%E5%8F%AF%E8%AE%BF%E9%97%AE\">https://your-username.github.io/{项目名}，便可访问</a> Hexo博客，如 <a href=\"https://anthonywangjing.github.io/My-Blog\">https://anthonywangjing.github.io/My-Blog</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm7elouli0000ih528iv96mni","category_id":"cm7eloulo0001ih52924dbj26","_id":"cm7eloulr0004ih52egfu4v7p"}],"PostTag":[{"post_id":"cm7elouli0000ih528iv96mni","tag_id":"cm7eloulq0002ih520g722d9d","_id":"cm7eloulr0003ih526gqf61aq"}],"Tag":[{"name":"杂项","_id":"cm7eloulq0002ih520g722d9d"}]}}